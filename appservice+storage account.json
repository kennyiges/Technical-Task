{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "skuName": {
            "type": "string",
            "defaultValue": "B1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Premium_LRS",
          "Premium_ZRS",
          "Standard_GRS",
          "Standard_GZRS",
          "Standard_LRS",
          "Standard_RAGRS",
          "Standard_RAGZRS",
          "Standard_ZRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },

        "environment": {
            "type": "string",
            "defaultValue": "dev",
            "metadata": {
              "description": "The environment we will deploy code to"
      
            }
          },

        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
            "description": "The storage account location."
            }
      },
      "systemName": {
        "type": "string",
        "defaultValue": "website1"
      }
    },
    "variables": {
        "regionReference": {
        "CENTRALUS": "CUS",
        "EASTUS": "EUS",
        "WESTUS": "WUS",
        "UKWEST": "UKW"
        },

        "regionDeployment": "[toLower(variables('regionReference')[parameters('location')])]",

        "appServicePlanName": "[toLower(concat('asp-',parameters('systemName'),'-',parameters('environment'),'-',variables('regionDeployment')))]",

        "webSiteName": "[toLower(concat('wapp-',parameters('systemName'),'-',parameters('environment'),'-',variables('regionDeployment')))]",

        "appInsightName": "[toLower(concat('appi-',parameters('systemName'),'-',parameters('environment'),'-',variables('regionDeployment')))]",
        "storageAccountName": "[toLower(concat('st',parameters('systemName'),parameters('environment'),variables('regionDeployment')))]"
    },
    "resources": [
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]": "Resource",
                "displayName": "Website"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                "[resourceId('microsoft.insights/components/', variables('appInsightName'))]"
            ],
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
                        "Microsoft.ApplicationInsights.AzureWebSites"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightName'))).InstrumentationKey]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "Microsoft.ApplicationInsights.AzureWebSites",
                    "type": "siteextensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
                    ],
                    "properties": {
                    }
                }
            ]
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[variables('appInsightName')]",
            "type": "Microsoft.Insights/components",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[variables('appInsightName')]"
            }
        },
       {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
            "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {}
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageAccountId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        }
    }
}